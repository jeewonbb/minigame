{"ast":null,"code":"var _jsxFileName = \"C:\\\\git\\\\minigame\\\\powerball\\\\src\\\\compenents\\\\pattern\\\\History.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { HistoryList } from \"./HistoryList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function History() {\n  _s();\n  const [historyList, setHistoryList] = useState([]);\n  useEffect(() => {\n    fetchHistoryData();\n  }, []);\n  const API_URL = \"https://pl.pz.team/minigame/data/credit.php\";\n  const API_PARAMS = {\n    category: \"history\",\n    token: \"GEdR9jerB1iReqIkgl%2bxeOzYGfoKymrwLLOe7%2fzMvCbENOcqNa%2brlf3cUKu64Bt1maCx8%2f2Yr5Y%2feU9EpaKnmzHH%2bYwQuxH9\",\n    pageno: 1,\n    pagesize: 100\n  };\n  const fetchHistoryData = async () => {\n    try {\n      const response = await axios.post(API_URL, new URLSearchParams(API_PARAMS));\n\n      // console.log(\"성공:\", response);\n\n      const list = response.data.data.list;\n      const formattedHistory = formatHistoryData(list);\n      setHistoryList(formattedHistory);\n    } catch (error) {\n      // console.error(\"데이터 요청 실패:\", error);\n    } finally {\n      console.log(\"데이터 요청 완료\");\n    }\n  };\n  const formatHistoryData = list => {\n    let prevRoundId = \"\";\n    const formattedList = [];\n    for (const item of list) {\n      const {\n        roundinfo,\n        betinfo,\n        gameinfo\n      } = item;\n      const {\n        roundid,\n        roundno\n      } = roundinfo;\n      const {\n        registerdate,\n        betamount,\n        winamount\n      } = betinfo;\n      const {\n        extrainfo\n      } = gameinfo;\n      if (prevRoundId !== roundid) {\n        formattedList.push({\n          roundid,\n          roundno,\n          registerdate,\n          result: extrainfo,\n          betamount,\n          winamount,\n          list: [betinfo]\n        });\n      } else {\n        const lastEntry = formattedList[formattedList.length - 1];\n        lastEntry.list.push(betinfo);\n        lastEntry.betamount += betamount;\n        lastEntry.winamount += winamount;\n      }\n      prevRoundId = roundid;\n    }\n    return formattedList;\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"bet-list\",\n    children: historyList.map((array, index) => /*#__PURE__*/_jsxDEV(HistoryList, {\n      roundid: array.roundid,\n      roundno: array.roundno,\n      date: array.registerdate,\n      result: array.result,\n      bet: array.list,\n      betamount: array.betamount,\n      winamount: array.winamount\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(History, \"/oAAAt9puLxvKW52z2EKRIc3c5Y=\");\n_c = History;\nvar _c;\n$RefreshReg$(_c, \"History\");","map":{"version":3,"names":["React","useState","useEffect","axios","HistoryList","jsxDEV","_jsxDEV","History","_s","historyList","setHistoryList","fetchHistoryData","API_URL","API_PARAMS","category","token","pageno","pagesize","response","post","URLSearchParams","list","data","formattedHistory","formatHistoryData","error","console","log","prevRoundId","formattedList","item","roundinfo","betinfo","gameinfo","roundid","roundno","registerdate","betamount","winamount","extrainfo","push","result","lastEntry","length","className","children","map","array","index","date","bet","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/git/minigame/powerball/src/compenents/pattern/History.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { HistoryList } from \"./HistoryList\";\n\nexport function History() {\n  const [historyList, setHistoryList] = useState([]);\n\n  useEffect(() => {\n    fetchHistoryData();\n  }, []);\n\n  const API_URL = \"https://pl.pz.team/minigame/data/credit.php\";\n  const API_PARAMS = {\n    category: \"history\",\n    token:\n      \"GEdR9jerB1iReqIkgl%2bxeOzYGfoKymrwLLOe7%2fzMvCbENOcqNa%2brlf3cUKu64Bt1maCx8%2f2Yr5Y%2feU9EpaKnmzHH%2bYwQuxH9\",\n    pageno: 1,\n    pagesize: 100,\n  };\n\n  const fetchHistoryData = async () => {\n    try {\n      const response = await axios.post(\n        API_URL,\n        new URLSearchParams(API_PARAMS)\n      );\n\n      // console.log(\"성공:\", response);\n\n      const list = response.data.data.list;\n      const formattedHistory = formatHistoryData(list);\n      setHistoryList(formattedHistory);\n    } catch (error) {\n      // console.error(\"데이터 요청 실패:\", error);\n    } finally {\n      console.log(\"데이터 요청 완료\");\n    }\n  };\n\n  const formatHistoryData = (list) => {\n    let prevRoundId = \"\";\n    const formattedList = [];\n\n    for (const item of list) {\n      const { roundinfo, betinfo, gameinfo } = item;\n      const { roundid, roundno } = roundinfo;\n      const { registerdate, betamount, winamount } = betinfo;\n      const { extrainfo } = gameinfo;\n\n      if (prevRoundId !== roundid) {\n        formattedList.push({\n          roundid,\n          roundno,\n          registerdate,\n          result: extrainfo,\n          betamount,\n          winamount,\n          list: [betinfo],\n        });\n      } else {\n        const lastEntry = formattedList[formattedList.length - 1];\n        lastEntry.list.push(betinfo);\n        lastEntry.betamount += betamount;\n        lastEntry.winamount += winamount;\n      }\n\n      prevRoundId = roundid;\n    }\n\n    return formattedList;\n  };\n\n  return (\n    <ul className=\"bet-list\">\n      {historyList.map((array, index) => (\n        <HistoryList\n          key={index}\n          roundid={array.roundid}\n          roundno={array.roundno}\n          date={array.registerdate}\n          result={array.result}\n          bet={array.list}\n          betamount={array.betamount}\n          winamount={array.winamount}\n        />\n      ))}\n    </ul>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}